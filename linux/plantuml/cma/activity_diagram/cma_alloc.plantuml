@startuml
title cma_alloc()

start
:check input arguments;
:trace_cma_alloc_start();
:get mask, offset, bitmap_maxno, bitmap_count;
while (True)
    :bitmap_no = bitmap_find_next_zero_area_off();
    if (bitmap_no >= bitmap_maxno) then (Yes)
		break
    endif
    :bitmap_set(cma->bitmap, bitmap_no, bitmap_count);
    :pfn = cma->base_pfn + (bitmap_no << cma->order_per_bit);
    :ret = alloc_contig_range(pfn, ...);
    if (ret == 0) then (Yes)
    	:page = pfn_to_page(pfn);
        break
    endif
    :cma_clear_bitmap(cma, pfn, count);
    note left
        alloc page failed,
        do clean work.
    end note
    if (ret != -EBUSY) then (Yes)
		break
    endif
    :trace_cma_alloc_busy_retry();
    :start = bitmap_no + mask + 1;
endwhile
:trace_cma_alloc_finish();
:page_kasan_tag_reset(page + i);
note left
    CMA can allocate multiple page blocks,
    which results in different blocks being
    marked with different tags. Reset the
    tags to ignore those page blocks.
end note

:out;<<input>>
if (page) then (Yes)
    :cma_sysfs_account_success_pages();
else
    :cma_sysfs_account_fail_pages();
endif

:return page;
stop

@enduml