@startuml

title __aloc_pages_may_oom()

start
:init struct of oom_control oc;
:acquire oom lock;
if (get_page_from_freelist()) then (Yes)
    :goto out;<<output>>
    detach
endif
if (current->flags & PF_DUMPCORE) then (Yes)
	:goto out;<<output>>
    detach
endif
if (order > PAGE_ALLOC_COSTLY_ORDER)
	:goto out;<<output>>
    note left
	    The OOM killer will not
        help higher order allocs
    end note
    detach
endif
if (gfp_mask & (__GFP_RETRY_MAYFAIL | __GFP_THISNODE)) then (Yes)
	:goto out;<<output>>
    detach
endif
if (ac->highest_zoneidx < ZONE_NORMAL)
	:goto out;<<output>>
    detach
endif
if (pm_suspended_storage())
	:goto out;
    detach
endif
if (out_of_memory())
	if (gfp_mask & __GFP_NOFAIL)
	    :__alloc_pages_cpuset_fallback();
        note left
        <code>
        page = get_page_from_freelist(
            alloc_flags|ALLOC_CPUSET);
        if (!page)
            page = get_page_from_freelist(
                alloc_flags);
        </code>
        end note
    endif
endif
#Orange:out;<<input>>
:unlock;
:return page;

stop

@enduml