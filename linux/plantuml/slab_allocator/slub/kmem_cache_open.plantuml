@startuml
title kmem_cache_open
start
:calculate_sizes;
note right
| struct kmem_cache |
| flags |
| object_size |
| inuse |
| offset |
| size |
| reciprocal_size |
| oo |
| min |

end note
:init s->min_partial;
note left
The larger the object size is,
the more slabs we want on the
partial list to avoid pounding
the page allocator excessively.
end note
:set_cpu_partial;
note right
* kmem_cache.cpu_partial
* kmem_cache.cpu_partial_slabs
----
cpu_partial determined the maximum
number of objects kept in the per
cpu partial lists of a processor.
end note

if (slab_state >= UP) then (Yes)
    :init_cache_random_seq;
endif

:init_kmem_cache_nodes;
note left:kmem_cache.node[]
:alloc_kmem_cache_cpus;
note right:kmem_cache.cpu_slab 
stop

@enduml