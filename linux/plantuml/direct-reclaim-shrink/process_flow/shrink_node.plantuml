@startuml
title shrink_node

start
:get current->reclaim_state;
#red:again;
:mem_cgroup_lruvec();
:prepare_scan_count();
:shrink_node_memcgs();
:account reclaimed slabs;
note left #pink
if (reclaim_state) {
	sc->nr_reclaimed += reclaim_state->reclaimed_slab;
	reclaim_state->reclaimed_slab = 0;
}
====
when slab pages freed: 
current->reclaim_state->reclaimed_slab += pages;
end note
:vmpressure();
note left:Record the subtree's reclaim efficiency
:enable reclaimable when need;
note left
if (sc->nr_reclaimed - nr_reclaimed)
	reclaimable = true;
end note

if (current_is_kswapd()) then (Yes)
:set PGDAT_WRITEBACK flag;
:set PGDAT_DIRTY flag;
:wait for writeback complete;
endif
note left
sc->nr.xxx will be updated in shrink_inactivate_list
end note
:if there are many dirty pages,
set LRUVEC_CONGESTED flag;
note right:current in kswapd
:congested and wait for kswapd
do recycling;
if (should_continue_reclaim()) then (Yes)
#red:goto again;
detach
endif

stop

@enduml